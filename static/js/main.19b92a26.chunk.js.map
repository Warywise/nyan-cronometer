{"version":3,"sources":["DisplayHour.jsx","timeComponent.jsx","timeIsEnd.jsx","buttonComponent.jsx","infos.jsx","InputOfTime.jsx","cronometer.jsx","App.js","reportWebVitals.js","index.js"],"names":["DisplayHourCheck","this","props","curCondition","getCondition","className","htmlFor","type","id","name","value","onChange","Component","TimeComponent","unit","curTime","increase","decrease","clearEv","onMouseDown","onMouseUp","TimeIsEnd","timeEnd","onClick","BtnComponent","buttonClass","countFunc","content","Infos","InputOfTime","event","keyCode","document","querySelector","click","onEntryValue","onKeyDown","enterValue","Cronometer","displayHour","target","checked","setState","stopEvents","mouseTimeoutId","clearTimeout","mouseIntervalId","clearInterval","countDown","state","hour","minutes","seconds","start","style","getTotalTime","counterId","setInterval","totalTime","endTimeId","setTimeout","timeEndAlarm","end","playNyanAudio","play","resetCountDown","pause","increaseTimer","changeTimer","decreaseTimer","entryTimeValue","input","timeValues","match","map","length","pauseCounter","resetCounter","viewHour","audio","getElementById","volume","currentTime","DisplayHour","App","owner","prevSt","src","preload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","path","component"],"mappings":"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","file":"static/js/main.19b92a26.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass DisplayHourCheck extends Component {\n  render() {\n    const { curCondition, getCondition } = this.props;\n    return (\n      <label className=\"text-content\" htmlFor=\"view-hour\">\n      Utilizar \"Horas\"\n      <input\n        type=\"checkbox\"\n        id=\"view-hour\"\n        name=\"viewHour\"\n        value={ curCondition }\n        onChange={ getCondition }\n      />\n    </ label>\n    );\n  }\n}\n\nDisplayHourCheck.propTypes = {\n  curCondition: PropTypes.bool.isRequired,\n  getCondition: PropTypes.func.isRequired,\n}\n\nexport default DisplayHourCheck;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass TimeComponent extends Component {\n  render() {\n    const { unit, curTime, increase, decrease, clearEv } = this.props;\n    return (\n      <div>\n        <button name={ unit } onMouseDown={ increase } onMouseUp={ clearEv }> ▲ </button>\n        <div className=\"time-unit\">{ curTime < 10 ? '0' + curTime : curTime }</div>\n        <button name={ unit } onMouseDown={ decrease } onMouseUp={ clearEv }> ▼ </button>\n      </div>\n    );\n  }\n}\n\nTimeComponent.propTypes = {\n  unit: PropTypes.string.isRequired,\n  curTime: PropTypes.number.isRequired,\n  increase: PropTypes.func.isRequired,\n  decrease: PropTypes.func.isRequired,\n  clearEv: PropTypes.func.isRequired,\n}\n\nexport default TimeComponent;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass TimeIsEnd extends Component {\n  render() {\n    const { timeEnd } = this.props;\n    return (\n      <div className=\"time-end\">\n        O Tempo Acabou!<br/>\n        Nyan Cat já<br/>atravessou a galáxia!\n        <div>\n          <button className=\"time-end-btn\" onClick={ timeEnd }>Recomeçar Jornada!</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nTimeIsEnd.propTypes = { timeEnd: PropTypes.func.isRequired }\n\nexport default TimeIsEnd;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass BtnComponent extends Component {\n  render() {\n    const { buttonClass, countFunc, content } = this.props;\n    return <button className={ `defaul-btn ${buttonClass}` } onClick={ countFunc }>{ content }</button>;\n  }\n}\n\nBtnComponent.propTypes = PropTypes.shape({\n  buttonClass: PropTypes.string,\n  countFunc: PropTypes.func,\n  content: PropTypes.string,\n}).isRequired;\n\nexport default BtnComponent;","import React, { Component } from 'react';\n\nclass Infos extends Component {\n  render() {\n    return (<p className=\"info-content\">\n      Clique e/ou segure nas setas para programar o tempo,<br />\n      ou digite separando os valores com qualquer caractere.<br />\n      <b>(Ex: \"0:1:25\", \"03/21/5\", \"5 43 15\", \"02h3m57s\")</b>\n    </p>);\n  }\n}\n\nexport default Infos;","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\n\nclass InputOfTime extends Component {\n\n  enterValue(event) {\n    if (event.keyCode === 13) {\n      document.querySelector('.input-time-btn').click();\n    }\n  }\n\n  render() {\n    const { onEntryValue } = this.props;\n    return (\n      <div>\n        <label htmlFor=\"input-time\">\n          <input\n            type=\"text\"\n            id=\"input-time\"\n            className=\"input-time entry-time\"\n            onKeyDown={ this.enterValue }\n          />\n        </label>\n        <button onClick={ onEntryValue } className=\"input-time-btn entry-time\" >Confirmar</button>\n      </div>\n    );\n  }\n}\n\nInputOfTime.propTypes = { onEntryValue: PropTypes.func.isRequired }\n\nexport default InputOfTime;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DisplayHourCheck from './DisplayHour';\nimport TimeComponent from './timeComponent';\nimport TimeIsEnd from './timeIsEnd';\nimport BtnComponent from './buttonComponent';\nimport Infos from './infos';\nimport InputOfTime from './InputOfTime';\n\nclass Cronometer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      end: false,\n      start: false,\n      viewHour: false,\n      hour: 0,\n      minutes: 0,\n      seconds: 0,\n    }\n  }\n\n  displayHour = ({ target: { name, checked } }) => {\n    this.setState({\n      [name]: checked,\n      hour: 0,\n    });\n  };\n\n  stopEvents = () => {\n    if (this.mouseTimeoutId) clearTimeout(this.mouseTimeoutId);\n    if (this.mouseIntervalId) clearInterval(this.mouseIntervalId);\n  }\n\n  getTotalTime() {\n    const { hour, minutes, seconds } = this.state;\n    return (\n      (hour * 3600) + (minutes * 60) + seconds\n    );\n  }\n\n  countDown = () => {\n    const { hour, minutes, seconds } = this.state;\n    if (hour || minutes || seconds > 0) {\n      this.setState({ start: true });\n  \n      document.querySelector('div.nyan-cat')\n        .style = `transition: ${this.getTotalTime()}s linear; margin-left: 0`;\n\n      clearInterval(this.counterId);\n\n      this.counterId = setInterval(() => {\n\n        this.setState(({ hour, minutes, seconds }) => (\n          seconds > 0 ? { seconds: seconds - 1 }\n            : (minutes > 0 ? { minutes: minutes - 1, seconds: 59 }\n              : (hour > 0 ? { hour: hour - 1, minutes: 59, seconds: 59 }\n                : { start: false }))\n        ));\n      }, 1000);\n\n      const totalTime = this.getTotalTime();\n      this.endTimeId = setTimeout(() => this.timeEndAlarm(), (totalTime + 1.5) * 1000);\n    }\n  }\n\n  playNyanAudio() {\n    const audio = document.getElementById('nyan-audio');\n    audio.volume = 0.7;\n    audio.currentTime = 5.5;\n    return audio;\n  }\n\n  timeEndAlarm = () => {\n    clearInterval(this.counterId);\n    this.setState({ end: true });\n    this.playNyanAudio().play();\n  }\n\n  resetCountDown = () => {\n    document.querySelector('div.nyan-cat')\n      .style = 'margin-left: -95%';\n    this.setState({ end: false });\n    this.playNyanAudio().pause();\n  }\n\n  increaseTimer = (event) => {\n    const { changeTimer } = this.props;\n    const { start } = this.state;\n    if (!start) changeTimer(this, event, true);\n  };\n\n  decreaseTimer = (event) => {\n    const { changeTimer } = this.props;\n    const { start } = this.state;\n    if (!start) changeTimer(this, event);\n  };\n\n  entryTimeValue = () => {\n    const input = document.querySelector('.input-time');\n    const timeValues = input.value.match(/\\d{1,2}/ig)\n      .map((value) => value > 59 ? 59 : value);\n    if (timeValues.length > 1) {\n      this.setState(timeValues.length > 2\n        ? {\n          hour: timeValues[0],\n          minutes: timeValues[1],\n          seconds: timeValues[2],\n        } : {\n          hour: 0,\n          minutes: timeValues[0],\n          seconds: timeValues[1],\n        });\n      input.value = '';\n    }\n  }\n\n  pauseCounter = () => {\n    clearInterval(this.counterId);\n    clearTimeout(this.endTimeId);\n    document.querySelector('div.nyan-cat')\n      .style = `transition: ${this.getTotalTime() / 2}s linear; margin-left: -95% `;\n    this.setState({\n      start: false,\n    });\n    this.playNyanAudio().pause();\n  }\n\n  resetCounter = () => {\n    clearInterval(this.counterId);\n    clearTimeout(this.endTimeId);\n    document.querySelector('div.nyan-cat')\n      .style = 'transition: 1s linear; margin-left: -95%';\n    this.setState({\n      end: false,\n      start: false,\n      hour: 0,\n      minutes: 0,\n      seconds: 0,\n    });\n    this.playNyanAudio().pause();\n  }\n\n  render() {\n    const { end, start,  viewHour, hour, minutes, seconds } = this.state;\n    return (\n      <>\n      <Infos />\n      <section className=\"cronometer-box\">\n        <DisplayHourCheck curCondition={ viewHour } getCondition={ this.displayHour } />\n        <div className=\"cronometer\">\n          { viewHour ? <><TimeComponent\n            unit=\"hour\"\n            curTime={ +(hour) }\n            increase={ this.increaseTimer }\n            decrease={ this.decreaseTimer }\n            clearEv={ this.stopEvents }\n          /> : </> : '' }\n          <TimeComponent\n            unit=\"minutes\"\n            curTime={ +(minutes) }\n            increase={ this.increaseTimer }\n            decrease={ this.decreaseTimer }\n            clearEv={ this.stopEvents }\n          /> :\n          <TimeComponent\n            unit=\"seconds\"\n            curTime={ +(seconds) }\n            increase={ this.increaseTimer }\n            decrease={ this.decreaseTimer }\n            clearEv={ this.stopEvents }\n          />\n        </div>\n        { !start ? <BtnComponent buttonClass=\"start-btn\" countFunc={ this.countDown } content=\"Start\" />\n          : <BtnComponent buttonClass=\"pause-btn\" countFunc={ this.pauseCounter } content=\"Pause\" />\n        }\n        <BtnComponent buttonClass=\"reset-btn\" countFunc={ this.resetCounter } content=\"RESET\" />\n          { end ? <TimeIsEnd timeEnd={ this.resetCountDown } /> : null }\n          { !start\n            ? <InputOfTime onEntryValue={ this.entryTimeValue } /> : null }\n      </section>\n      </>\n    );\n  }\n}\n\nCronometer.propTypes = { changeTimer: PropTypes.func.isRequired }\n\nexport default Cronometer;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Cronometer from './cronometer';\n\nclass App extends Component {\n  changeTimer = (owner, { target: { name } }, increase) => {\n    if (increase) {\n      owner.setState((prevSt) => (\n        prevSt[name] < 59\n        ? {\n      [name]: prevSt[name] + 1,\n        }\n        : {\n          [name]: 0,\n        }\n    ));\n\n      owner.mouseTimeoutId = setTimeout(() => {\n        owner.mouseIntervalId = setInterval(() => {\n          owner.setState((prevSt) => (\n            prevSt[name] < 59\n            ? {\n          [name]: prevSt[name] + 1,\n            }\n            : {\n              [name]: 0,\n            }\n        ));\n        }, 100);\n      }, 800);\n      return;\n    }\n\n    owner.setState((prevSt) => (\n      prevSt[name] > 0\n        ? {\n      [name]: prevSt[name] - 1,\n        }\n        : {\n          [name]: 59,\n        }\n    ));\n\n    owner.mouseTimeoutId = setTimeout(() => {\n      owner.mouseIntervalId = setInterval(() => {\n        owner.setState((prevSt) => (\n          prevSt[name] > 0\n            ? {\n          [name]: prevSt[name] - 1,\n            }\n            : {\n              [name]: 59,\n            }\n        ));\n      }, 100);\n    }, 800);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>Nyan Catrometer</p>\n        </header>\n        <Cronometer changeTimer={ this.changeTimer } />\n        <div className=\"nyan-cat\" />\n        <audio id=\"nyan-audio\" src=\"https://www.albinoblacksheep.com/audio/mp3/Nyanyanyanyanyanyanya.mp3\" preload=\"auto\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Route path=\"/nyan-cronometer\" component={ App } />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}